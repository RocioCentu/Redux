{"ast":null,"code":"//accion que se va a utilizar en los componentes\nimport { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_EXITO, AGREGAR_PRODUCTO_ERROR, COMENZAR_DESCARGA_PRODUCTOS, DESCARGA_PRODUCTOS_EXITO, DESCARGA_PRODUCTOS_ERROR, OBTENER_PRODUCTO_ELIMINAR, PRODUCTO_ELIMINADO_EXITO, PRODUCTO_ELIMINADO_ERROR, OBTENER_PRODUCTO_EDITAR, PRODUCTO_EDITADO_EXITO, PRODUCTO_EDITADO_ERROR } from '../types';\nimport clienteAxios from '../config/axios'; //import Swal from 'sweetalert2';\n//crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      //insertar en la api \n      await clienteAxios.post('/productos', producto);\n      dispatch(agregarProductoExito(producto));\n    } catch (error) {\n      console.log(error);\n      dispatch(agregarProductoError(true));\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // si el producto se guarda en la base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n});","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/crudredux/src/actions/productionActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_EXITO","AGREGAR_PRODUCTO_ERROR","COMENZAR_DESCARGA_PRODUCTOS","DESCARGA_PRODUCTOS_EXITO","DESCARGA_PRODUCTOS_ERROR","OBTENER_PRODUCTO_ELIMINAR","PRODUCTO_ELIMINADO_EXITO","PRODUCTO_ELIMINADO_ERROR","OBTENER_PRODUCTO_EDITAR","PRODUCTO_EDITADO_EXITO","PRODUCTO_EDITADO_ERROR","clienteAxios","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","error","console","log","agregarProductoError","type","payload","estado"],"mappings":"AAAA;AACA,SACIA,gBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,EAIIC,2BAJJ,EAKIC,wBALJ,EAMIC,wBANJ,EAOIC,yBAPJ,EAQIC,wBARJ,EASIC,wBATJ,EAUIC,uBAVJ,EAWIC,sBAXJ,EAYIC,sBAZJ,QAaO,UAbP;AAcA,OAAOC,YAAP,MAAyB,iBAAzB,C,CACA;AAEA;;AAEA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA2C;AAC9C,SAAO,MAAMC,QAAN,IAAiB;AACrBA,IAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;;AAEA,QAAI;AACA;AACD,YAAMJ,YAAY,CAACK,IAAb,CAAkB,YAAlB,EAA+BH,QAA/B,CAAN;AACFC,MAAAA,QAAQ,CAACG,oBAAoB,CAACJ,QAAD,CAArB,CAAR;AACA,KAJD,CAIE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACHJ,MAAAA,QAAQ,CAACO,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACA;AACH,GAXD;AAYH;;AAED,MAAMN,eAAe,GAAG,OAAO;AAC3BO,EAAAA,IAAI,EAAEvB,gBADqB;AAE3BwB,EAAAA,OAAO,EAAE;AAFkB,CAAP,CAAxB,C,CAIA;;;AACA,MAAMN,oBAAoB,GAAGJ,QAAQ,KAAK;AACtCS,EAAAA,IAAI,EAAEtB,sBADgC;AAEtCuB,EAAAA,OAAO,EAAEV;AAF6B,CAAL,CAArC,C,CAKA;;;AACA,MAAMQ,oBAAoB,GAAGG,MAAM,KAAK;AACpCF,EAAAA,IAAI,EAAErB,sBAD8B;AAEpCsB,EAAAA,OAAO,EAAEC;AAF2B,CAAL,CAAnC","sourcesContent":["//accion que se va a utilizar en los componentes\r\nimport {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n    COMENZAR_DESCARGA_PRODUCTOS,\r\n    DESCARGA_PRODUCTOS_EXITO,\r\n    DESCARGA_PRODUCTOS_ERROR,\r\n    OBTENER_PRODUCTO_ELIMINAR,\r\n    PRODUCTO_ELIMINADO_EXITO,\r\n    PRODUCTO_ELIMINADO_ERROR,\r\n    OBTENER_PRODUCTO_EDITAR,\r\n    PRODUCTO_EDITADO_EXITO,\r\n    PRODUCTO_EDITADO_ERROR\r\n} from '../types';\r\nimport clienteAxios from '../config/axios';\r\n//import Swal from 'sweetalert2';\r\n\r\n//crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(producto){\r\n    return async(dispatch)=>{\r\n       dispatch(agregarProducto());\r\n\r\n       try {\r\n           //insertar en la api \r\n          await clienteAxios.post('/productos',producto);\r\n        dispatch(agregarProductoExito(producto));\r\n       } catch (error) {\r\n           console.log(error);\r\n        dispatch(agregarProductoError(true));\r\n       }\r\n    }\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n    type: AGREGAR_PRODUCTO,\r\n    payload: true\r\n});\r\n// si el producto se guarda en la base de datos\r\nconst agregarProductoExito = producto => ({\r\n    type: AGREGAR_PRODUCTO_EXITO,\r\n    payload: producto\r\n})\r\n\r\n// si hubo un error\r\nconst agregarProductoError = estado => ({\r\n    type: AGREGAR_PRODUCTO_ERROR,\r\n    payload: estado\r\n});"]},"metadata":{},"sourceType":"module"}