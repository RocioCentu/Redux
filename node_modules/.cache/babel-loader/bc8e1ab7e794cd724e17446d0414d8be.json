{"ast":null,"code":"//accion que se va a utilizar en los componentes\nimport { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_EXITO, AGREGAR_PRODUCTO_ERROR, COMENZAR_DESCARGA_PRODUCTOS, DESCARGA_PRODUCTOS_EXITO, DESCARGA_PRODUCTOS_ERROR, OBTENER_PRODUCTO_ELIMINAR, PRODUCTO_ELIMINADO_EXITO, PRODUCTO_ELIMINADO_ERROR, OBTENER_PRODUCTO_EDITAR, PRODUCTO_EDITADO_EXITO, PRODUCTO_EDITADO_ERROR } from '../types';\nimport clienteAxios from '../config/axios';\nimport Swal from 'sweetalert2'; //crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      //insertar en la api \n      await clienteAxios.post('/productos', producto);\n      dispatch(agregarProductoExito(producto)); //alerta\n\n      Swal.fire('Correcto', 'El producto se agrego correctamente');\n    } catch (error) {\n      console.log(error);\n      dispatch(agregarProductoError(true));\n      Swal.fire({\n        icon: 'error',\n        title: 'Hubo un error',\n        text: 'Hubo un error,intenta de nuevo'\n      });\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // si el producto se guarda en la base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n}); //FUNCION QUE DESCARGA LOS PROD DE LA BASE DE DATOS (API)\n\n\nexport function obtenerProductosAction() {\n  return async dispatch => {\n    dispatch(descargarProductos());\n\n    try {\n      dispatch(descargarProductosExito);\n    } catch (error) {\n      console.log(error);\n      dispatch(descargarProductosError);\n    }\n  };\n}\n\nconst descargarProductos = () => ({\n  type: COMENZAR_DESCARGA_PRODUCTOS,\n  payload: true\n});\n\nconst descargarProductosExito = () => ({\n  type: DESCARGA_PRODUCTOS_EXITO,\n  payload: true\n});\n\nconst descargarProductosError = () => ({\n  type: DESCARGA_PRODUCTOS_ERROR,\n  payload: true\n});","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/crudredux/src/actions/productionActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_EXITO","AGREGAR_PRODUCTO_ERROR","COMENZAR_DESCARGA_PRODUCTOS","DESCARGA_PRODUCTOS_EXITO","DESCARGA_PRODUCTOS_ERROR","OBTENER_PRODUCTO_ELIMINAR","PRODUCTO_ELIMINADO_EXITO","PRODUCTO_ELIMINADO_ERROR","OBTENER_PRODUCTO_EDITAR","PRODUCTO_EDITADO_EXITO","PRODUCTO_EDITADO_ERROR","clienteAxios","Swal","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","fire","error","console","log","agregarProductoError","icon","title","text","type","payload","estado","obtenerProductosAction","descargarProductos","descargarProductosExito","descargarProductosError"],"mappings":"AAAA;AACA,SACIA,gBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,EAIIC,2BAJJ,EAKIC,wBALJ,EAMIC,wBANJ,EAOIC,yBAPJ,EAQIC,wBARJ,EASIC,wBATJ,EAUIC,uBAVJ,EAWIC,sBAXJ,EAYIC,sBAZJ,QAaO,UAbP;AAcA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAEA;;AAEA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA2C;AAC9C,SAAO,MAAMC,QAAN,IAAiB;AACrBA,IAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;;AAEA,QAAI;AACA;AACD,YAAML,YAAY,CAACM,IAAb,CAAkB,YAAlB,EAA+BH,QAA/B,CAAN;AAEFC,MAAAA,QAAQ,CAACG,oBAAoB,CAACJ,QAAD,CAArB,CAAR,CAJG,CAMH;;AACAF,MAAAA,IAAI,CAACO,IAAL,CACI,UADJ,EAEI,qCAFJ;AAKA,KAZD,CAYE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACHL,MAAAA,QAAQ,CAACQ,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACCX,MAAAA,IAAI,CAACO,IAAL,CAAU;AAEPK,QAAAA,IAAI,EAAC,OAFE;AAGPC,QAAAA,KAAK,EAAC,eAHC;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAV;AAOD;AACH,GA1BD;AA2BH;;AAED,MAAMV,eAAe,GAAG,OAAO;AAC3BW,EAAAA,IAAI,EAAE5B,gBADqB;AAE3B6B,EAAAA,OAAO,EAAE;AAFkB,CAAP,CAAxB,C,CAIA;;;AACA,MAAMV,oBAAoB,GAAGJ,QAAQ,KAAK;AACtCa,EAAAA,IAAI,EAAE3B,sBADgC;AAEtC4B,EAAAA,OAAO,EAAEd;AAF6B,CAAL,CAArC,C,CAKA;;;AACA,MAAMS,oBAAoB,GAAGM,MAAM,KAAK;AACpCF,EAAAA,IAAI,EAAE1B,sBAD8B;AAEpC2B,EAAAA,OAAO,EAAEC;AAF2B,CAAL,CAAnC,C,CAMA;;;AAEA,OAAO,SAASC,sBAAT,GAAiC;AACxC,SAAO,MAAMf,QAAN,IAAiB;AACpBA,IAAAA,QAAQ,CAACgB,kBAAkB,EAAnB,CAAR;;AAEA,QAAI;AACAhB,MAAAA,QAAQ,CAACiB,uBAAD,CAAR;AACH,KAFD,CAEE,OAAOZ,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAL,MAAAA,QAAQ,CAACkB,uBAAD,CAAR;AACH;AACJ,GATD;AAUC;;AAED,MAAMF,kBAAkB,GAAC,OAAK;AAC1BJ,EAAAA,IAAI,EAACzB,2BADqB;AAE1B0B,EAAAA,OAAO,EAAC;AAFkB,CAAL,CAAzB;;AAKA,MAAMI,uBAAuB,GAAC,OAAK;AAC/BL,EAAAA,IAAI,EAACxB,wBAD0B;AAE/ByB,EAAAA,OAAO,EAAC;AAFuB,CAAL,CAA9B;;AAKA,MAAMK,uBAAuB,GAAC,OAAK;AAC/BN,EAAAA,IAAI,EAACvB,wBAD0B;AAE/BwB,EAAAA,OAAO,EAAC;AAFuB,CAAL,CAA9B","sourcesContent":["//accion que se va a utilizar en los componentes\r\nimport {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n    COMENZAR_DESCARGA_PRODUCTOS,\r\n    DESCARGA_PRODUCTOS_EXITO,\r\n    DESCARGA_PRODUCTOS_ERROR,\r\n    OBTENER_PRODUCTO_ELIMINAR,\r\n    PRODUCTO_ELIMINADO_EXITO,\r\n    PRODUCTO_ELIMINADO_ERROR,\r\n    OBTENER_PRODUCTO_EDITAR,\r\n    PRODUCTO_EDITADO_EXITO,\r\n    PRODUCTO_EDITADO_ERROR\r\n} from '../types';\r\nimport clienteAxios from '../config/axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n//crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(producto){\r\n    return async(dispatch)=>{\r\n       dispatch(agregarProducto());\r\n\r\n       try {\r\n           //insertar en la api \r\n          await clienteAxios.post('/productos',producto);\r\n\r\n        dispatch(agregarProductoExito(producto));\r\n          \r\n        //alerta\r\n        Swal.fire(\r\n            'Correcto',\r\n            'El producto se agrego correctamente'\r\n        );\r\n\r\n       } catch (error) {\r\n           console.log(error);\r\n        dispatch(agregarProductoError(true));\r\n         Swal.fire({\r\n             \r\n            icon:'error',\r\n            title:'Hubo un error',\r\n            text:'Hubo un error,intenta de nuevo'\r\n         });\r\n\r\n       }\r\n    }\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n    type: AGREGAR_PRODUCTO,\r\n    payload: true\r\n});\r\n// si el producto se guarda en la base de datos\r\nconst agregarProductoExito = producto => ({\r\n    type: AGREGAR_PRODUCTO_EXITO,\r\n    payload: producto\r\n})\r\n\r\n// si hubo un error\r\nconst agregarProductoError = estado => ({\r\n    type: AGREGAR_PRODUCTO_ERROR,\r\n    payload: estado\r\n});\r\n\r\n\r\n//FUNCION QUE DESCARGA LOS PROD DE LA BASE DE DATOS (API)\r\n\r\nexport function obtenerProductosAction(){\r\nreturn async(dispatch)=>{\r\n    dispatch(descargarProductos());\r\n\r\n    try {\r\n        dispatch(descargarProductosExito);\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch(descargarProductosError);\r\n    }\r\n}\r\n}\r\n\r\nconst descargarProductos=()=>({\r\n    type:COMENZAR_DESCARGA_PRODUCTOS,\r\n    payload:true\r\n});\r\n\r\nconst descargarProductosExito=()=>({\r\n    type:DESCARGA_PRODUCTOS_EXITO,\r\n    payload:true\r\n});\r\n\r\nconst descargarProductosError=()=>({\r\n    type:DESCARGA_PRODUCTOS_ERROR,\r\n    payload:true\r\n});"]},"metadata":{},"sourceType":"module"}