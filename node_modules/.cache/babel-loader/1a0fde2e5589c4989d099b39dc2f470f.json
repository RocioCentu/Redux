{"ast":null,"code":"//accion que se va a utilizar en los componentes\nimport { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_EXITO, AGREGAR_PRODUCTO_ERROR, COMENZAR_DESCARGA_PRODUCTOS, DESCARGA_PRODUCTOS_EXITO, DESCARGA_PRODUCTOS_ERROR, OBTENER_PRODUCTO_ELIMINAR, PRODUCTO_ELIMINADO_EXITO, PRODUCTO_ELIMINADO_ERROR, OBTENER_PRODUCTO_EDITAR, PRODUCTO_EDITADO_EXITO, PRODUCTO_EDITADO_ERROR } from '../types';\nimport clienteAxios from '../config/axios'; //import Swal from 'sweetalert2';\n//crear nuevos productos\n\nexport function crearNuevoProductoAction(prod) {\n  return () => {\n    console.log(prod);\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // si el producto se guarda en la base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n});","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/crudredux/src/actions/productionActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_EXITO","AGREGAR_PRODUCTO_ERROR","COMENZAR_DESCARGA_PRODUCTOS","DESCARGA_PRODUCTOS_EXITO","DESCARGA_PRODUCTOS_ERROR","OBTENER_PRODUCTO_ELIMINAR","PRODUCTO_ELIMINADO_EXITO","PRODUCTO_ELIMINADO_ERROR","OBTENER_PRODUCTO_EDITAR","PRODUCTO_EDITADO_EXITO","PRODUCTO_EDITADO_ERROR","clienteAxios","crearNuevoProductoAction","prod","console","log","agregarProducto","type","payload","agregarProductoExito","producto","agregarProductoError","estado"],"mappings":"AAAA;AACA,SACIA,gBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,EAIIC,2BAJJ,EAKIC,wBALJ,EAMIC,wBANJ,EAOIC,yBAPJ,EAQIC,wBARJ,EASIC,wBATJ,EAUIC,uBAVJ,EAWIC,sBAXJ,EAYIC,sBAZJ,QAaO,UAbP;AAcA,OAAOC,YAAP,MAAyB,iBAAzB,C,CACA;AAEA;;AAEA,OAAO,SAASC,wBAAT,CAAkCC,IAAlC,EAAuC;AAC1C,SAAO,MAAI;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;AAGH;;AAED,MAAMG,eAAe,GAAG,OAAO;AAC3BC,EAAAA,IAAI,EAAElB,gBADqB;AAE3BmB,EAAAA,OAAO,EAAE;AAFkB,CAAP,CAAxB,C,CAIA;;;AACA,MAAMC,oBAAoB,GAAGC,QAAQ,KAAK;AACtCH,EAAAA,IAAI,EAAEjB,sBADgC;AAEtCkB,EAAAA,OAAO,EAAEE;AAF6B,CAAL,CAArC,C,CAKA;;;AACA,MAAMC,oBAAoB,GAAGC,MAAM,KAAK;AACpCL,EAAAA,IAAI,EAAEhB,sBAD8B;AAEpCiB,EAAAA,OAAO,EAAEI;AAF2B,CAAL,CAAnC","sourcesContent":["//accion que se va a utilizar en los componentes\r\nimport {\r\n    AGREGAR_PRODUCTO,\r\n    AGREGAR_PRODUCTO_EXITO,\r\n    AGREGAR_PRODUCTO_ERROR,\r\n    COMENZAR_DESCARGA_PRODUCTOS,\r\n    DESCARGA_PRODUCTOS_EXITO,\r\n    DESCARGA_PRODUCTOS_ERROR,\r\n    OBTENER_PRODUCTO_ELIMINAR,\r\n    PRODUCTO_ELIMINADO_EXITO,\r\n    PRODUCTO_ELIMINADO_ERROR,\r\n    OBTENER_PRODUCTO_EDITAR,\r\n    PRODUCTO_EDITADO_EXITO,\r\n    PRODUCTO_EDITADO_ERROR\r\n} from '../types';\r\nimport clienteAxios from '../config/axios';\r\n//import Swal from 'sweetalert2';\r\n\r\n//crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(prod){\r\n    return ()=>{\r\n        console.log(prod);\r\n    }\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n    type: AGREGAR_PRODUCTO,\r\n    payload: true\r\n});\r\n// si el producto se guarda en la base de datos\r\nconst agregarProductoExito = producto => ({\r\n    type: AGREGAR_PRODUCTO_EXITO,\r\n    payload: producto\r\n})\r\n\r\n// si hubo un error\r\nconst agregarProductoError = estado => ({\r\n    type: AGREGAR_PRODUCTO_ERROR,\r\n    payload: estado\r\n});"]},"metadata":{},"sourceType":"module"}